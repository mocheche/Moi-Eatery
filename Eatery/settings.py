"""
Django settings for Eatery project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 's+)%u9wfli)9s0f@o79zge9onsq=(a*z*1fss$u69hkl)ud$06'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'makori.django.projects@gmail.com'
EMAIL_HOST_PASSWORD = 'j112o358B@#$%^&*'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False

DEFAULT_FROM_EMAIL = 'Eatery <makori.django.projects@gmail.com>'
BASE_URL = 'http://127.0.0.1:8000'


MANAGERS = (
    ('job makori', "makori.django.projects@gmail.com"),
)

ADMINS = MANAGERS


AUTH_USER_MODEL = 'accounts.User' #changes the built-in user
LOGIN_URL = '/accounts/login/'
LOGIN_URL_REDIRECT = '/'
LOGOUT_URL = '/accounts/logout/'
LOGOUT_REDIRECT_URL = '/accounts/login/'


# Application definition

INSTALLED_APPS = [
	'django.contrib.sites',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    #My app
    'shop',
    'cart',
    'orders',
    'payment',
    'coupon',
    'search',
    'accounts',
    'django_extensions',
    #for internationalization
    'rosetta',
    #from  math tags used in templates
    'mathfilters',
    
    #paypal
    'paypal.standard.ipn',

    #allauth
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.facebook',
    # 'allauth.socialaccount.providers.twitter',
    # 'allauth.socialaccount.providers.google',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.RemoteUserMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Eatery.urls'



TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'cart.context_processors.cart',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Eatery.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'com423',
        'HOST': '',
        'PORT':'',
        'USER': 'reflex',
        'PASSWORD':'reflex',


    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

#Password Hashers

PASSWORD_HASHERS = [
                    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
                    ]

#SENDSMS_BACKEND ='sendsms.sendsms.backends.console.SmsBackend'

#Email backend
# EMAIL_BACKEND so allauth can proceed to send confirmation emails
# ONLY for development/testing use console
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'


# Add the 'allauth' backend to AUTHENTICATION_BACKEND and keep default ModelBackend
AUTHENTICATION_BACKENDS = [ 'django.contrib.auth.backends.RemoteUserBackend',
                            'allauth.account.auth_backends.AuthenticationBackend']


# Ensure SITE_ID is set sites app
SITE_ID = 1

# Custom allauth settings
# Use email as the primary identifier
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True
# Make email verification mandatory to avoid junk email accounts
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
# Eliminate need to provide username, as it's a very old practice
ACCOUNT_USERNAME_REQUIRED = True


SOCIALACCOUNT_PROVIDERS =  { 'facebook':
                               {'METHOD': 'oauth2',
                                'SCOPE': ['email'],
                                'AUTH_PARAMS': {'auth_type': 'reauthenticate'},
                                'LOCALE_FUNC': lambda request: 'en_US',
                                'VERSION': 'v2.4'
                               },
                            'google':
                             { 'SCOPE': ['email'],
                               'AUTH_PARAMS': { 'access_type': 'online' }
                             }
                          
                           }





#paypal
PAYPAL_RECEIVER_EMAIL ='jobmakori94@gmail.com'
PAYPAL_TEST = True

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/
from django.utils.translation import gettext_lazy as _

LANGUAGES =(('en',_('English')),
            ('sw', _('Shahili')),
            )
LANGUAGE_CODE = 'sw'

TIME_ZONE = 'Africa/Nairobi'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'
PROTECTED_ROOT = os.path.join(BASE_DIR, "static", "protected_media")
MEDIA_ROOT = os.path.join(BASE_DIR,'static', 'media')
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static', 'static_files'),]
STATIC_ROOT = os.path.join(BASE_DIR, 'static', 'static_root')


#Session
CART_SESSION_ID = 'cart'

#Recommender setting for redis server
REDIS_HOST = 'localhost'
REDIS_PORT = 6379
REDIS_DB   = 0

#Locale
LOCALE_PATHS =((os.path.join(BASE_DIR,'locale/')),
	)
